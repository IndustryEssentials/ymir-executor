ARG PYTORCH="1.8.0"
ARG CUDA="11.1"
ARG CUDNN="8"

FROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-runtime

# mmcv>=1.3.17, <=1.5.0
ARG MMCV="1.4.3"
ARG SERVER_MODE=prod

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"
ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

# Set timezone
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo 'Asia/Shanghai' >/etc/timezone

# Install apt package
RUN apt-get update && apt-get install -y gcc ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install ymir-exc sdk and MMCV
RUN pip install --no-cache-dir --upgrade pip wheel setuptools && \
    if [ "${SERVER_MODE}" = "dev" ]; then \
        pip install --force-reinstall -U "git+https://github.com/IndustryEssentials/ymir.git/@dev#egg=ymir-exc&subdirectory=docker_executor/sample_executor/ymir_exc"; \
    else \
        pip install ymir-exc; \
    fi \
    && pip install --no-cache-dir mmcv-full==${MMCV} -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html \
    && conda clean --all

# Install det-mmdetection-tmi
ADD det-mmdetection-tmi /app
WORKDIR /app
ENV FORCE_CUDA="1"
RUN pip install --no-cache-dir -r requirements/runtime.txt \
    && pip install --no-cache-dir -e . \
    && mkdir /img-man \
    && mv *-template.yaml /img-man \
    && echo "python3 start.py" > /usr/bin/start.sh

CMD bash /usr/bin/start.sh
